<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Rainy.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>